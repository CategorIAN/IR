SELECT DISTINCT STC_PERSON_ID     AS ID,
STC_ACAD_LEVEL          AS LEVEL,
CASE WHEN STTR_STUDENT_LOAD IN ('F', 'O') THEN 'FT' ELSE 'PT' END AS LOAD,
GENDER,
STC_TERM AS TERM,
ROW_NUMBER() OVER (PARTITION BY STC_PERSON_ID ORDER BY TERM_START_DATE) AS LL_RANK
FROM STUDENT_ACAD_CRED AS STC
LEFT JOIN STC_STATUSES AS STATUS ON STC.STUDENT_ACAD_CRED_ID = STATUS.STUDENT_ACAD_CRED_ID AND POS = 1
LEFT JOIN STUDENT_COURSE_SEC AS SEC ON STC.STC_STUDENT_COURSE_SEC = SEC.STUDENT_COURSE_SEC_ID
LEFT JOIN STUDENT_TERMS_VIEW STV ON STC.STC_PERSON_ID = STV.STTR_STUDENT AND STC.STC_TERM = STV.STTR_TERM
LEFT JOIN TERMS ON STC.STC_TERM = TERMS_ID
LEFT JOIN PERSON ON STC_PERSON_ID = PERSON.ID
WHERE STATUS.STC_STATUS IN ('N', 'A')
AND COALESCE(SEC.SCS_PASS_AUDIT, '') != 'A'
AND (
TERMS_ID LIKE '%FA'
OR TERMS_ID LIKE '%SP'
OR TERMS_ID LIKE '%SU'
)
AND TERM_START_DATE < DATEADD(YEAR, 1, '2024-07-01')
AND TERM_START_DATE >= '2024-07-01'
AND STC.STC_CRED > 0
AND STC_PERSON_ID = '6188110'

SELECT DISTINCT STC_PERSON_ID                                                     AS ID,
                      STC_ACAD_LEVEL                                                    AS LEVEL,
                      CASE WHEN STTR_STUDENT_LOAD IN ('F', 'O') THEN 'FT' ELSE 'PT' END AS LOAD,
                      GENDER
      FROM STUDENT_ACAD_CRED AS STC
               LEFT JOIN STC_STATUSES AS STATUS ON STC.STUDENT_ACAD_CRED_ID = STATUS.STUDENT_ACAD_CRED_ID AND POS = 1
               LEFT JOIN STUDENT_COURSE_SEC AS SEC ON STC.STC_STUDENT_COURSE_SEC = SEC.STUDENT_COURSE_SEC_ID
               LEFT JOIN STUDENT_TERMS_VIEW STV ON STC.STC_PERSON_ID = STV.STTR_STUDENT AND STC.STC_TERM = STV.STTR_TERM
               LEFT JOIN TERMS ON STC.STC_TERM = TERMS_ID
               LEFT JOIN PERSON ON STC_PERSON_ID = PERSON.ID
      WHERE STATUS.STC_STATUS IN ('N', 'A')
        AND COALESCE(SEC.SCS_PASS_AUDIT, '') != 'A'
        AND TERMS_ID = '2024FA'
        AND STC.STC_CRED > 0
AND STC_PERSON_ID = '6188110'

SELECT DISTINCT STC_PERSON_ID AS ID,
                RACE.IPEDS_RACE_ETHNIC_DESC
FROM STUDENT_ACAD_CRED AS STC
JOIN STC_STATUSES AS STATUS ON STC.STUDENT_ACAD_CRED_ID = STATUS.STUDENT_ACAD_CRED_ID AND POS = 1
JOIN STUDENT_COURSE_SEC AS SEC ON STC.STC_STUDENT_COURSE_SEC = SEC.STUDENT_COURSE_SEC_ID
JOIN Z01_ALL_RACE_ETHNIC_W_FLAGS AS RACE ON STC_PERSON_ID = RACE.ID
WHERE RACE.IPEDS_RACE_ETHNIC_DESC LIKE '%Indian%'
AND STC_TERM = '2024FA'
AND COALESCE(SCS_PASS_AUDIT, '') != 'A'
AND STC_STATUS IN ('N', 'A')
AND STC_ACAD_LEVEL = 'UG'


SELECT STUDENT_ID,
STUDENT_GENDER,
IPEDS_RACE_ETHNIC_DESC,
ROW_NUMBER() OVER (PARTITION BY STUDENT_ID ORDER BY MAJORS_ID) AS MAJOR_RANK,
ACPG_CIP,
ACPG_ACAD_LEVEL
FROM STUDENT_ACAD_PROGRAMS_VIEW AS SAPV
LEFT JOIN ACAD_PROGRAMS AS AP
ON SAPV.STP_ACADEMIC_PROGRAM = AP.ACAD_PROGRAMS_ID
LEFT JOIN (
SELECT MAJORS_ID,
'Program Major' AS MAJOR_TYPE,
NULL AS STUDENT_PROGRAMS_ID,
NULL AS STPR_ADDNL_MAJOR_END_DATE
FROM MAJORS
UNION
SELECT MAJORS_ID,
'Additional Major',
STUDENT_PROGRAMS_ID,
STPR_ADDNL_MAJOR_END_DATE
FROM STPR_MAJOR_LIST
JOIN MAJORS ON STPR_MAJOR_LIST.STPR_ADDNL_MAJORS = MAJORS.MAJORS_ID
) AS ALL_MAJORS
ON (
MAJOR_TYPE = 'Program Major'
AND SAPV.STP_MAJOR1 = ALL_MAJORS.MAJORS_ID
)
OR (
MAJOR_TYPE = 'Additional Major'
AND SAPV.STUDENT_ID + '*' + SAPV.STP_ACADEMIC_PROGRAM = ALL_MAJORS.STUDENT_PROGRAMS_ID
AND COALESCE(STPR_ADDNL_MAJOR_END_DATE, STP_END_DATE) >= STP_END_DATE
)
WHERE STP_CURRENT_STATUS = 'Graduated'
AND STP_END_DATE BETWEEN '2024-07-01' AND '2025-06-30'
AND IPEDS_RACE_ETHNIC_DESC = 'American Indian'
AND STUDENT_GENDER = 'F'

SELECT *
FROM STUDENT_ACAD_CRED
WHERE STC_PERSON_ID = '5891172'

SELECT *
FROM STUDENT_ACAD_PROGRAMS_VIEW
WHERE STUDENT_ID = '5891172'